import { processSetting } from "../helper.js";
import { Scenes } from "telegraf";
import { Markup } from "telegraf";

const { BaseScene } = Scenes;

export function createScene(name, enterMessage, settingParam, type, min, max, leaveCallback) {
    const scene = new BaseScene(name);

    // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "–û—Ç–º–µ–Ω–∞"
    const keyboard = Markup.inlineKeyboard([Markup.button.callback("–û—Ç–º–µ–Ω–∞", leaveCallback)]);

    scene.enter((ctx) => ctx.replyWithMarkdownV2(enterMessage, keyboard));

    scene.on("text", async (ctx) => {
        const setParam = processSetting(ctx, settingParam, type, min, max, leaveCallback);
        const result = await setParam(ctx.message.text);
        if (result) {
            ctx.scene.leave();
        }
    });

    return scene;
}

export function createOptionScene(name, enterMessage, settingName, optionRows, leaveCallback) {
    const scene = new BaseScene(name);

    // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–ø—Ü–∏—è–º–∏
    const keyboard = Markup.inlineKeyboard(
        // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ —Ä—è–¥–∞–º
        [
            ...optionRows.map((row) => row.map((option) => Markup.button.callback(option, option))),
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞" –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ä—è–¥—É
            [Markup.button.callback("–û—Ç–º–µ–Ω–∞", leaveCallback)],
        ],
    );

    scene.enter((ctx) => ctx.replyWithMarkdownV2(enterMessage, keyboard));

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –æ–ø—Ü–∏–µ–π
    optionRows.flat().forEach((option) => {
        scene.action(option, async (ctx) => {
            ctx.session[settingName] = option;
            await ctx.reply(
                `‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ${settingName} –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ ${option}`,
                Markup.inlineKeyboard([[Markup.button.callback("üîô –ù–∞–∑–∞–¥", leaveCallback)]]),
            );
            ctx.scene.leave();
            ctx.answerCbQuery();
        });
    });

    return scene;
}
